//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using System;
using System.Linq;

using LinqToDB;
using LinqToDB.Mapping;

namespace DataModels
{
	/// <summary>
	/// Database       : tianya
	/// Data Source    : 127.0.0.1
	/// Server Version : 5.5.5-10.1.37-MariaDB
	/// </summary>
	public partial class TianyaDB : LinqToDB.Data.DataConnection
	{
		public ITable<Comment>     Comments       { get { return this.GetTable<Comment>(); } }
		public ITable<ParentChild> ParentChildren { get { return this.GetTable<ParentChild>(); } }

		public TianyaDB()
		{
			InitDataContext();
			InitMappingSchema();
		}

		public TianyaDB(string configuration)
			: base(configuration)
		{
			InitDataContext();
			InitMappingSchema();
		}

		partial void InitDataContext  ();
		partial void InitMappingSchema();
	}

	[Table("comment")]
	public partial class Comment
	{
		[Column("id"),         PrimaryKey, Identity] public int    Id        { get; set; } // int(11)
		[Column("topic_id"),   Nullable            ] public int?   TopicId   { get; set; } // int(11)
		[Column("topic_type"), Nullable            ] public string TopicType { get; set; } // varchar(255)
		[Column("content"),    Nullable            ] public string Content   { get; set; } // varchar(255)
		[Column("from_uid"),   Nullable            ] public int?   FromUid   { get; set; } // int(11)
	}

	[Table("parent_child")]
	public partial class ParentChild
	{
		[Column("id"),        PrimaryKey, Identity] public int Id       { get; set; } // int(11)
		[Column("parent_id"), NotNull             ] public int ParentId { get; set; } // int(11)
		[Column("child_id"),  NotNull             ] public int ChildId  { get; set; } // int(11)
	}

	public static partial class TableExtensions
	{
		public static Comment Find(this ITable<Comment> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ParentChild Find(this ITable<ParentChild> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}
	}
}
